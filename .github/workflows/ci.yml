name: CI & Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          cd ${{ matrix.service }}
          yarn install --frozen-lockfile

      - name: Run lint
        run: |
          cd ${{ matrix.service }}
          yarn lint

      - name: Run tests
        run: |
          cd ${{ matrix.service }}
          yarn test --if-present

  docker-build-deploy:
    needs: build-test-lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/myapp-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/myapp-frontend:latest

      # Example: optional deploy step (Render, Fly.io, or EC2)
      - name: Deploy to Render (optional)
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
